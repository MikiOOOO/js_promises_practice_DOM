{"version":3,"sources":["scripts/main.js"],"names":["leftButton","document","getElementById","rightButton","promiseNotification","querySelector","isLeftClicked","isRightClicked","toggleNotificationClass","classToAdd","classList","add","classToRemove","remove","firstPromise","Promise","resolve","reject","setTimeout","Error","addEventListener","handleClick","secondPromise","thirdPromise","then","resolveMessage","textContent","catch","rejectMessage"],"mappings":";AAAA,aAEA,IAAMA,EAAaC,SAASC,eAAe,wBACrCC,EAAcF,SAASC,eAAe,yBACtCE,EAAsBH,SAASI,cAAc,4BAC/CC,GAAgB,EAChBC,GAAiB,EAErB,SAASC,EAAwBC,GAC/BL,EAAoBM,UAAUC,IAAIF,GAE5BG,IAAAA,EAA+B,YAAfH,EAA2B,UAAY,UAE7DL,EAAoBM,UAAUG,OAAOD,GAGvC,IAAME,EAAe,IAAIC,QAAQ,SAACC,EAASC,GACzCC,WAAW,WACJZ,GACHW,EAAO,IAAIE,MAAM,gCAElB,KAOHlB,SAASmB,iBAAiB,QALjBC,WACHf,GACFU,EAAQ,kCAMRM,EAAgB,IAAIP,QAAQ,SAACC,GASjCf,SAASmB,iBAAiB,QARjBC,YACHf,GAAiBC,IACnBW,WAAW,WACTF,EAAQ,gCACP,SAOHO,EAAe,IAAIR,QAAQ,SAACC,GAOhCf,SAASmB,iBAAiB,QANjBC,WACHf,GAAiBC,GACnBS,EAAQ,kCAOdF,EACGU,KAAK,SAACC,GACLjB,EAAwB,WACxBJ,EAAoBsB,YAAcD,IAEnCE,MAAM,SAACC,GACNpB,EAAwB,WACxBJ,EAAoBsB,YAAcE,IAGtCN,EACGE,KAAK,SAACC,GACLjB,EAAwB,WACxBJ,EAAoBsB,YAAcD,IAEnCE,MAAM,cAETJ,EACGC,KAAK,SAACC,GACLjB,EAAwB,WACxBJ,EAAoBsB,YAAcD,IAEnCE,MAAM,cAET3B,EAAWoB,iBAAiB,QAAS,WACnCd,GAAgB,IAGlBH,EAAYiB,iBAAiB,QAAS,WACpCb,GAAiB","file":"main.188ab7b2.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst leftButton = document.getElementById('buttons__button-left');\nconst rightButton = document.getElementById('buttons__button-right');\nconst promiseNotification = document.querySelector('[data-qa=\"notification\"]');\nlet isLeftClicked = false;\nlet isRightClicked = false;\n\nfunction toggleNotificationClass(classToAdd) {\n  promiseNotification.classList.add(classToAdd);\n\n  const classToRemove = classToAdd === 'success' ? 'warning' : 'success';\n\n  promiseNotification.classList.remove(classToRemove);\n}\n\nconst firstPromise = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    if (!isLeftClicked) {\n      reject(new Error('First promise was rejected'));\n    }\n  }, 3000);\n\n  function handleClick() {\n    if (isLeftClicked) {\n      resolve('first promise was resolved');\n    }\n  }\n  document.addEventListener('click', handleClick);\n});\n\nconst secondPromise = new Promise((resolve) => {\n  function handleClick() {\n    if (isLeftClicked || isRightClicked) {\n      setTimeout(() => {\n        resolve('Second promise was resolved');\n      }, 1000);\n    }\n  }\n\n  document.addEventListener('click', handleClick);\n});\n\nconst thirdPromise = new Promise((resolve) => {\n  function handleClick() {\n    if (isLeftClicked && isRightClicked) {\n      resolve('Third promise was resolved');\n    }\n  }\n\n  document.addEventListener('click', handleClick);\n});\n\nfirstPromise\n  .then((resolveMessage) => {\n    toggleNotificationClass('success');\n    promiseNotification.textContent = resolveMessage;\n  })\n  .catch((rejectMessage) => {\n    toggleNotificationClass('warning');\n    promiseNotification.textContent = rejectMessage;\n  });\n\nsecondPromise\n  .then((resolveMessage) => {\n    toggleNotificationClass('success');\n    promiseNotification.textContent = resolveMessage;\n  })\n  .catch(() => {});\n\nthirdPromise\n  .then((resolveMessage) => {\n    toggleNotificationClass('success');\n    promiseNotification.textContent = resolveMessage;\n  })\n  .catch(() => {});\n\nleftButton.addEventListener('click', () => {\n  isLeftClicked = true;\n});\n\nrightButton.addEventListener('click', () => {\n  isRightClicked = true;\n});\n"]}